{
  "info": {
    "_postman_id": "37bee497-297e-4810-b3d9-8fa8eb67a5a0",
    "name": "Comments",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
    "_exporter_id": "26057198"
  },
  "item": [
    {
      "name": "Добавление нового пользователя",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{   \r\n    \"name\": \"Mr. Lyle Fahey\",\r\n    \"email\": \"Abelardo_Dicki@yahoo.com\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/admin/users",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "admin",
            "users"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "0",
              "description": "(Required) id события",
              "disabled": true
            }
          ]
        },
        "description": "Обратите внимание:\n- нельзя добавить повторный запрос\n- инициатор события не может добавить запрос на участие в своём событии\n- нельзя участвовать в неопубликованном событии\n- если у события достигнут лимит запросов на участие - необходимо вернуть ошибку\n- если для события отключена пре-модерация запросов на участие, то запрос должен автоматически перейти в состояние подтвержденного"
      },
      "response": []
    },
    {
      "name": "Добавление новой категории",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{   \r\n    \"name\": \"test catrgory\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": "http://localhost:8080/admin/categories",
        "description": "Обратите внимание: дата и время на которые намечено событие не может быть раньше, чем через два часа от текущего момента"
      },
      "response": []
    },
    {
      "name": "Добавление нового события",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{   \r\n    \"annotation\": \"long test annotation\",\r\n    \"category\": 1,\r\n    \"description\": \"very long test description\",\r\n    \"eventDate\":\"2224-10-12 20:44:39\",\r\n    \"location\": {\"lat\":-22.7566,\"lon\":106.7807},\r\n    \"paid\":\"true\",\r\n    \"participantLimit\":\"693\",\r\n    \"requestModeration\":\"true\",\r\n    \"title\":\"test title\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": "localhost:8080/users/1/events",
        "description": "Обратите внимание: дата и время на которые намечено событие не может быть раньше, чем через два часа от текущего момента"
      },
      "response": []
    },
    {
      "name": "Добавление нового комментария",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(201);   \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "const target = pm.response.json();\r",
              "var query = {};\r",
              "pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
              "\r",
              "pm.test(\"Комментарий должен содержать поля: id, text, authorName, eventId, created\", function () {\r",
              "pm.expect(target).to.have.property('id');\r",
              "pm.expect(target).to.have.property('text');\r",
              "pm.expect(target).to.have.property('authorName');\r",
              "pm.expect(target).to.have.property('eventId');\r",
              "pm.expect(target).to.have.property('created');\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{   \r\n    \"text\": \"test comment\",\r\n    \"eventId\": 1\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": "http://localhost:8080/users/1/comments/1",
        "description": "Обратите внимание: дата и время на которые намечено событие не может быть раньше, чем через два часа от текущего момента"
      },
      "response": []
    },
    {
      "name": "Обновление текста комментария",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
              "    pm.response.to.have.status(200);   \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "const target = pm.response.json();\r",
              "var query = {};\r",
              "pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
              "\r",
              "pm.test(\"Комментарий должен содержать поля: id, text, authorName, eventId, created\", function () {\r",
              "pm.expect(target).to.have.property('id');\r",
              "pm.expect(target).to.have.property('text');\r",
              "pm.expect(target).to.have.property('authorName');\r",
              "pm.expect(target).to.have.property('eventId');\r",
              "pm.expect(target).to.have.property('created');\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{   \r\n    \"text\": \"updated comment text\",\r\n    \"eventId\": 1\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": "http://localhost:8080/users/1/comments/1",
        "description": "Обратите внимание: дата и время на которые намечено событие не может быть раньше, чем через два часа от текущего момента"
      },
      "response": []
    },
    {
      "name": "Получение комментария",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", () => {\r",
              "    pm.response.to.have.status(200);   \r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "});\r",
              "\r",
              "const target = pm.response.json();\r",
              "var query = {};\r",
              "pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
              "\r",
              "pm.test(\"Комментарий должен содержать поля: id, text, authorName, eventId, created\", () => {\r",
              "pm.expect(target).to.have.property('id');\r",
              "pm.expect(target).to.have.property('text');\r",
              "pm.expect(target).to.have.property('authorName');\r",
              "pm.expect(target).to.have.property('eventId');\r",
              "pm.expect(target).to.have.property('created');\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": "http://localhost:8080/comments/1"
      },
      "response": []
    },
    {
      "name": "Удаление комментария",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 204 и данные в формате json\", () => pm.response.to.have.status(204)\r",
              ");"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": "http://localhost:8080/users/1/comments/1"
      },
      "response": []
    }
  ]
}